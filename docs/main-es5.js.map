{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/active-list/active-list.component.ts","webpack:///src/app/active-list/active-list.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/complete.service.ts","webpack:///src/app/completed-list/completed-list.component.ts","webpack:///src/app/completed-list/completed-list.component.html","webpack:///src/app/edit/edit.component.ts","webpack:///src/app/edit/edit.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/todo-form/todo-form.component.ts","webpack:///src/app/todo-form/todo-form.component.html","webpack:///src/app/todo.service.ts","webpack:///src/app/username.service.ts","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ActiveListComponent","toDoService","completeService","router","taskLists","formDesign","backgroundColor","border","borderRadius","margin","padding","width","newBackground","backgroundImage","backgroundRepeat","backgroundSize","height","position","overflow","taskStyle","cursor","color","sortByCompletionDate","changeTask","subscribe","newList","sortByStartDate","index","setTaskToEdit","navigate","addToCompletedList","deleteTask","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","AppModule","declarations","providers","bootstrap","CompleteService","completedList","task","push","slice","providedIn","CompletedListComponent","completedLists","myDate","Date","backgroundAttachment","length","onClear","EditComponent","todoService","route","editTask","getTaskToEdit","editForm","required","today","completion","params","updateTask","value","onSubmit","HeaderComponent","usernameService","usernameEntered","menuCollapse","navBarLinkStyle","usernameValid","valid","username","getUsername","TodoFormComponent","toDoForm","addToActiveList","TodoService","taskList","newTask","sort","a","b","splice","next","updatedTask","UsernameService","name","WelcomeComponent","formStyle","welcomeForm","setUsername","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { TodoList } from '../todoList.module';\r\nimport { TodoService } from '../todo.service';\r\nimport { CompleteService } from '../complete.service';\r\n\r\n@Component({\r\n  selector: 'app-active-list',\r\n  templateUrl: './active-list.component.html',\r\n  styleUrls: ['./active-list.component.css']\r\n})\r\nexport class ActiveListComponent implements OnInit {\r\n  taskLists: TodoList[]=[];\r\n  username: string;\r\n  formDesign = {\r\n    backgroundColor: 'lightgray',\r\n    border: '1px solid black',\r\n    borderRadius: '.25rem',\r\n    margin: '5px',\r\n    padding: '5px',\r\n    width: '80vw'\r\n  };\r\n\r\n  newBackground = {\r\n    backgroundImage: 'url(https://i0.wp.com/thepointsguy.com/wp-content/uploads/2020/01/GettyImages-1095476474-scaled.jpg?fit=2560%2C1714px&ssl=1)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    height: 'calc(100vh - 56px)',\r\n    position: 'fixed',\r\n    overflow: 'auto',\r\n    width: '100%'\r\n  };\r\n  \r\n  taskStyle = {\r\n    cursor:'pointer',\r\n    color: 'blue'\r\n  };\r\n\r\n  constructor(private toDoService: TodoService,\r\n              private completeService: CompleteService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    //Get taskList from ToDoService\r\n    this.taskLists = this.toDoService.sortByCompletionDate();\r\n    \r\n    //Subscribed to changes to taskList in ToDoService\r\n    this.toDoService.changeTask.subscribe(\r\n      (newList: TodoList[]) => {\r\n        this.taskLists = newList;\r\n      }\r\n    )\r\n  }\r\n\r\n  //Sort taskLists by compeltion date, then start date, then a-z\r\n  sortByCompletionDate(){\r\n    this.taskLists = this.toDoService.sortByCompletionDate();\r\n  }\r\n\r\n  //Sort taskLists by start date, then completion date, then a-z\r\n  sortByStartDate(){\r\n    this.taskLists = this.toDoService.sortByStartDate();\r\n  }\r\n\r\n  //Send task to be edited in edit component\r\n  onEdit(index: number){\r\n    this.toDoService.setTaskToEdit(this.taskLists[index]);\r\n    this.router.navigate(['edit', index]);\r\n  }\r\n\r\n  //Send completed task to completed component\r\n  onComplete(index: number){\r\n    this.completeService.addToCompletedList(this.taskLists[index]);\r\n    this.toDoService.deleteTask(index);\r\n  }\r\n\r\n  //Delete task\r\n  onDelete(index: number){\r\n    this.toDoService.deleteTask(index);\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\" [ngStyle]=\"newBackground\">\r\n    <div class=\"row\">\r\n        <div class=\"col d-flex justify-content-center\">\r\n            <h3>Active List</h3>\r\n        </div>  \r\n    </div>\r\n    <div class=\"row mb-3\">\r\n        <div class=\"col d-flex justify-content-center\">\r\n            <div ngbDropdown class=\"d-inline-block\">\r\n                <button class=\"btn btn-primary\" id=\"dropdownBasicOne\" ngbDropdownToggle>Sort</button>\r\n                <div ngbDropdownMenu aria-labelledby=\"dropdownBasicOne\">\r\n                    <button ngbDropdownItem (click)=\"sortByStartDate()\">By Start Date</button>\r\n                    <button ngbDropdownItem (click)=\"sortByCompletionDate()\">By Completion Date(default)</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" *ngFor=\"let taskList of taskLists; let i = index\">\r\n        <div class=\"col d-flex justify-content-center\">\r\n            <div class=\"row\" [ngStyle]=\"formDesign\">\r\n                <div class=\"col-12 mb-2\">\r\n                    <label for=\"task\">Task #{{ i + 1 }}</label>\r\n                    <input class=\"form-control\" type=\"text\" id=\"task\" value=\"{{ taskList.task }}\" disabled>\r\n                </div>\r\n                <div class=\"col-12 col-md-4\">\r\n                    <label for=\"start\">Start Date:</label>\r\n                    <input class=\"form-control\" type=\"date\" id=\"start\" value=\"{{ taskList.today }}\" disabled>\r\n                </div>\r\n                <div class=\"col-12 col-md-4\">\r\n                    <label for=\"completion\">Completion Date:</label>\r\n                    <input class=\"form-control\" type=\"date\" id=\"completion\" value=\"{{ taskList.completion }}\" disabled>\r\n                </div>\r\n                <div class=\"col-12 col-md-4 d-flex align-items-end mt-1\">\r\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"button group\">\r\n                        <button type=\"button\" class=\"btn btn-warning\" (click)=\"onEdit(i)\">Edit</button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(i)\">Delete</button>\r\n                        <button type=\"button\" class=\"btn btn-success\" (click)=\"onComplete(i)\">Completed</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TodoFormComponent } from './todo-form/todo-form.component';\r\nimport { ActiveListComponent } from './active-list/active-list.component';\r\nimport { CompletedListComponent } from './completed-list/completed-list.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { EditComponent } from './edit/edit.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/welcome', pathMatch: 'full' },\r\n  { path: 'welcome', component: WelcomeComponent },\r\n  { path: 'form', component: TodoFormComponent },\r\n  { path: 'active', component: ActiveListComponent },\r\n  { path: 'edit/:id', component: EditComponent },\r\n  { path: 'complete', component: CompletedListComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(){}\r\n}\r\n","<app-header></app-header>\r\n<div class=\"container-fluid\">\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ActiveListComponent } from './active-list/active-list.component';\r\nimport { CompletedListComponent } from './completed-list/completed-list.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { TodoFormComponent } from './todo-form/todo-form.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ActiveListComponent,\r\n    CompletedListComponent,\r\n    EditComponent,\r\n    HeaderComponent,\r\n    TodoFormComponent,\r\n    WelcomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { TodoList } from './todoList.module';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompleteService {\r\n  completedList: TodoList[] = [];\r\n  newList: [] = [];\r\n\r\n  constructor() { }\r\n\r\n  //Get the completed task from active component\r\n  addToCompletedList(task: TodoList){\r\n    this.completedList.push(task)\r\n  }\r\n\r\n  //Send completedList to completed component\r\n  getList(){\r\n    return this.completedList.slice();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TodoList } from '../todoList.module';\r\nimport { CompleteService } from '../complete.service';\r\n\r\n@Component({\r\n  selector: 'app-completed-list',\r\n  templateUrl: './completed-list.component.html',\r\n  styleUrls: ['./completed-list.component.css']\r\n})\r\nexport class CompletedListComponent implements OnInit {\r\n  completedLists: TodoList[] = []\r\n  username: string;\r\n  myDate = new Date;\r\n  formDesign = {\r\n    backgroundColor: 'lightgray',\r\n    backgroundAttachment: 'scroll',\r\n    border: '1px solid black',\r\n    borderRadius: '.25rem',\r\n    padding: '5px',\r\n    width: '80vw'\r\n  };\r\n  newBackground = {\r\n    backgroundImage: 'url(https://www.trevellers.com/wp-content/uploads/2015/05/Haiku-Stairs-Hawaii-Cr-SaraMak.jpg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    height: 'calc(100vh - 56px)',\r\n    overflow: 'auto',\r\n    position: 'fixed',\r\n    width: '100%'\r\n  };\r\n\r\n  constructor(private completeService: CompleteService) { }\r\n\r\n  ngOnInit() {\r\n    //Get completedList from CompleteService\r\n    this.completedLists = this.completeService.completedList;  \r\n  }\r\n\r\n  //Clear completedList\r\n  onClear(){\r\n    this.completedLists.length = 0;\r\n  }\r\n}\r\n","<div class=\"container-fluid\" [ngStyle]=\"newBackground\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 d-flex justify-content-center\">\r\n        <h3>Completed List</h3>\r\n    </div>\r\n    <div class=\"col-12 d-flex justify-content-center mb-2\">\r\n      <button class=\"btn btn-danger\" (click)=\"onClear()\">Clear Completed Task</button>\r\n    </div>\r\n</div>\r\n<div class=\"row\" *ngFor=\"let completedList of completedLists\">\r\n  <div class=\"col d-flex justify-content-center\">\r\n    <div class=\"row\" [ngStyle]=\"formDesign\">\r\n      <div class=\"col-12 col-md-12\">\r\n        <label for=\"task\">Task</label>\r\n        <div id=\"task\" class=\"form-control\">{{ completedList.task }}</div>\r\n      </div>\r\n      <div class=\"col-6 col-md-4\">\r\n        <label for=\"today\">Date Started</label>\r\n        <div id=\"today\" class=\"form-control\">{{ completedList.today | date: 'shortDate' }}</div>\r\n      </div>\r\n      <div class=\"col-6 col-md-4\">\r\n        <label for=\"completion\">Date Completed</label>\r\n        <div id=\"comopletion\" class=\"form-control\">{{ completedList.completion | date: 'shortDate' }}</div>\r\n      </div>\r\n      <div class=\"col-12 col-md-4\">\r\n        <label for=\"actual\">Actual Completion Date</label>\r\n        <div id=\"actual\" class=\"form-control\">{{ myDate | date: 'shortDate' }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { TodoService } from 'src/app/todo.service';\r\nimport { TodoList } from 'src/app/todoList.module';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.css']\r\n})\r\nexport class EditComponent implements OnInit {\r\n  editTask: TodoList;\r\n  index: number;\r\n  editForm: FormGroup;\r\n  formDesign = {\r\n    backgroundColor: 'lightgray',\r\n    border: '1px solid black',\r\n    borderRadius: '.25rem',\r\n    padding: '5px',\r\n    width: '80vw'\r\n  };\r\n  newBackground = {\r\n    backgroundImage: 'url(https://peakvisor.com/img/news/Hawaii-Kauai.jpg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    height: 'calc(100vh - 56px)',\r\n    width: '100%'\r\n  };\r\n\r\n  constructor(private todoService: TodoService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    //Get task to edit from active component\r\n    this.editTask = this.todoService.getTaskToEdit();\r\n\r\n    //FormGroup for reactive form\r\n    this.editForm = new FormGroup({\r\n      'task': new FormControl(this.editTask.task, Validators.required),\r\n      'today': new FormControl(this.editTask.today, Validators.required),\r\n      'completion': new FormControl(this.editTask.completion, Validators.required)\r\n    })\r\n\r\n    //Get id number to set the index of taskList array in toDoService\r\n    this.route.params.subscribe(\r\n      (params: Params) => {\r\n        this.index = +params['id'];\r\n      }\r\n    )\r\n  }\r\n\r\n  //Submit edited task to ToDoService to update taskList\r\n  onSubmit(){\r\n    this.todoService.updateTask(this.index, this.editForm.value);\r\n    this.router.navigate(['active']);\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\" [ngStyle]=\"newBackground\">\r\n    <div class=\"row\">\r\n        <div class=\"col d-flex justify-content-center\">\r\n            <h3>Edit Task</h3>\r\n        </div>\r\n    </div>\r\n    <div class=\"d-flex justify-content-center\">\r\n        <form [formGroup]=\"editForm\" [ngStyle]=\"formDesign\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 mb-3\">\r\n                    <label for=\"task\">Task</label>\r\n                    <input class=\"form-control\" formControlName=\"task\" id=\"task\" type=\"text\">\r\n                    <div class=\"alert alert-danger\" *ngIf=\"!editForm.controls.task.valid && !editForm.controls.task.touched\">\r\n                        Please update your task!\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-md-6\">\r\n                    <label for=\"today\">Date Started</label>\r\n                    <input class=\"form-control\" formControlName=\"today\" type=\"date\" id=\"today\">\r\n                    <div class=\"alert alert-danger\" *ngIf=\"!editForm.controls.today.valid && !editForm.controls.today.touched\">\r\n                        Please update your starting date!\r\n                    </div> \r\n                </div>\r\n                <div class=\"col-12 col-md-6\">\r\n                    <label for=\"completion\">Date Completed</label>\r\n                    <input class=\"form-control\" formControlName=\"completion\" type=\"date\" id=\"completion\">\r\n                    <div class=\"alert alert-danger\" *ngIf=\"!editForm.controls.completion.valid && !editForm.controls.completion.touched\">\r\n                        Please update your completion date!\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 mt-3\">\r\n                    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!editForm.valid\">Update</button>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"alert alert-light\" *ngIf=\"!editForm.valid\">\r\n                        *You are missing an update\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UsernameService } from '../username.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  public usernameEntered: boolean = false;\r\n  public menuCollapse: boolean = true;\r\n  public username: string;\r\n  public navBarLinkStyle = {\r\n    cursor: 'pointer',\r\n    color: 'white'\r\n  }\r\n\r\n  constructor(private usernameService: UsernameService) { }\r\n\r\n  ngOnInit(){\r\n\r\n    //Subscribe to UsernameService to check if there was an username entered and get username\r\n    this.usernameService.usernameValid.subscribe(\r\n      (valid: boolean) => {\r\n        this.usernameEntered = valid;\r\n        if(this.usernameEntered){\r\n          this.username = this.usernameService.getUsername();\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  onLogout(){\r\n    this.menuCollapse = true;\r\n    this.usernameEntered = false;\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\" *ngIf=\"usernameEntered\">\r\n    <div class=\"navbar-brand\">{{ username }}'s App</div>\r\n\r\n    <button class=\"navbar-toggler\" (click)=\"menuCollapse = !menuCollapse\" type=\"button\">&#9776;</button>\r\n    \r\n    <div class=\"collapse navbar-collapse\" [ngbCollapse]=\"menuCollapse\">\r\n        <ul class=\"navbar-nav\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" routerLink=\"/form\" [ngStyle]=\"navBarLinkStyle\" (click)=\"menuCollapse = true\">Task Form</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" routerLink=\"/active\" [ngStyle]=\"navBarLinkStyle\" (click)=\"menuCollapse = true\">Active List</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" routerLink=\"/complete\" [ngStyle]=\"navBarLinkStyle\" (click)=\"menuCollapse = true\">Completed List</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" routerLink=\"/welcome\" [ngStyle]=\"navBarLinkStyle\" (click)=\"onLogout()\">Logout</a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</nav>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { TodoService } from '../todo.service';\r\n\r\n@Component({\r\n  selector: 'app-todo-form',\r\n  templateUrl: './todo-form.component.html',\r\n  styleUrls: ['./todo-form.component.css']\r\n})\r\nexport class TodoFormComponent implements OnInit {\r\n  username: string;\r\n  toDoForm: FormGroup;\r\n  checking: boolean;\r\n  formDesign = {\r\n    backgroundColor: 'lightgray',\r\n    border: '1px solid black',\r\n    borderRadius: '.25rem',\r\n    padding: '5px',\r\n    width: '600px'\r\n  };\r\n  newBackground = {\r\n    backgroundImage: 'url(https://explore-us-uploads.imgix.net/wp-content/uploads/2017/12/1400AD-header_hawaii_1-original.jpg?auto=format&q=50)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    height: 'calc(100vh - 56px)',\r\n    width: '100%'\r\n  };\r\n\r\n  constructor(private toDoService: TodoService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(){\r\n    //FormGroup for reactive form\r\n    this.toDoForm = new FormGroup({\r\n      'task': new FormControl(null, [Validators.required]),\r\n      'today': new FormControl(null, [Validators.required]),\r\n      'completion': new FormControl(null, [Validators.required])\r\n    })\r\n  }\r\n\r\n  //Submit form to ToDoService\r\n  onSubmit(){\r\n    this.toDoService.addToActiveList(this.toDoForm.value);\r\n    this.router.navigate(['active']);\r\n  }\r\n}","<div class=\"container-fluid\" [ngStyle]=\"newBackground\">\r\n    <div class=\"row\">\r\n        <div class=\"col d-flex justify-content-center\">\r\n            <h3>Task Form</h3>\r\n        </div>\r\n    </div>\r\n    <div class=\"d-flex justify-content-center\">\r\n        <form [formGroup]=\"toDoForm\" [ngStyle]=\"formDesign\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 mb-3\">\r\n                    <label for=\"task\">Enter Task</label>\r\n                    <input type=\"text\" formControlName=\"task\" id=\"task\" class=\"form-control\">\r\n                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!toDoForm.controls.task.valid && toDoForm.controls.task.touched\">\r\n                        Please enter a task!\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-md-6\">\r\n                    <label for=\"today\">Today's Date</label>\r\n                    <input type=\"date\" formControlName=\"today\" id=\"today\" class=\"form-control\">\r\n                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!toDoForm.controls.today.valid && toDoForm.controls.today.touched\">\r\n                        Please choose a start date!\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-md-6\">\r\n                    <label for=\"completion\">Completion Date</label>\r\n                    <input type=\"date\" formControlName=\"completion\" id=\"completion\" class=\"form-control\">\r\n                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!toDoForm.controls.completion.valid && toDoForm.controls.completion.touched\">\r\n                        Please choose a completion date!\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 mt-3\">\r\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!toDoForm.valid\">Start Task</button>\r\n                </div> \r\n                <div class=\"col-12\">\r\n                    <p *ngIf=\"!toDoForm.valid\">*Must fill out entire form to start task</p>\r\n                </div> \r\n            </div> \r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TodoList } from './todoList.module';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoService {\r\n  changeTask = new Subject<TodoList[]>();\r\n  task: TodoList;\r\n  \r\n  taskList: TodoList[]=[];\r\n\r\n  constructor() { }\r\n\r\n  //Get task from to-do-form\r\n  addToActiveList(newTask: TodoList){\r\n    this.taskList.push(newTask);\r\n  }\r\n\r\n  //Sort taskList by completion date, then start date, then a-z\r\n  sortByCompletionDate(){\r\n    return this.taskList.sort((a: any, b: any) => {\r\n      if(a.completion > b.completion){\r\n        return 1;\r\n      }\r\n      if(b.completion > a.completion){\r\n        return -1;\r\n      }\r\n      if(a.today > b.today){\r\n        return 1;\r\n      }\r\n      if(b.today > a.today){ \r\n        return -1\r\n      }\r\n      if(a.task > b.task){\r\n        return 1;\r\n      }\r\n      if(b.task > a.task){\r\n        return -1;\r\n      }\r\n    });\r\n  }\r\n\r\n  //Sort taskList by start date, then completion date, then a-z \r\n  sortByStartDate(){\r\n    return this.taskList.sort((a: any, b: any) => {\r\n      if(a.today > b.today){\r\n        return 1;\r\n      }\r\n      if(b.today > a.today){\r\n        return -1;\r\n      }\r\n      if(a.completion > b.completion){\r\n        return 1;\r\n      }\r\n      if(b.completion > a.completion){\r\n        return -1;\r\n      }\r\n      if(a.task > b.task){\r\n        return 1;\r\n      }\r\n      if(b.task > a.task){ \r\n        return -1\r\n      }\r\n    });\r\n  }\r\n\r\n  //Get task from active component to edit\r\n  setTaskToEdit(task: TodoList){\r\n    this.task = task;\r\n  }\r\n\r\n  //Send to edit component to edit\r\n  getTaskToEdit(){\r\n    return this.task;\r\n  }\r\n\r\n  //Delete a task from active component\r\n  deleteTask(index: number){\r\n    this.taskList.splice(index, 1);\r\n    this.changeTask.next(this.taskList.slice());\r\n  }\r\n\r\n  //Update taskList after done editing\r\n  updateTask(index: number, updatedTask: TodoList){\r\n    this.taskList[index] = updatedTask;\r\n    \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsernameService {\r\n  username: string;\r\n  usernameEntered: boolean = false;\r\n  usernameValid = new Subject<boolean>();\r\n\r\n  constructor() { }\r\n\r\n  //Set username after it is inputed\r\n  setUsername(name: string, valid: boolean){\r\n    this.username = name;\r\n    this.usernameEntered = valid;\r\n    this.usernameValid.next(valid);\r\n  }\r\n\r\n  getUsername(){\r\n    return this.username;\r\n  }\r\n\r\n  checkForUsername(){\r\n    return this.usernameEntered;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UsernameService } from '../username.service';\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n  welcomeForm: FormGroup;\r\n  newBackground = {\r\n    backgroundImage: 'url(https://www.gohawaii.com/sites/default/files/styles/image_gallery_bg_xl/public/hero-unit-images/Homepage_Hero_042019v1.jpg?itok=JquDLD-V)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    height: '100vh',\r\n    margin: '0',\r\n    width: '100vw'\r\n  };\r\n  formStyle = {\r\n    backgroundColor: 'lightgray',\r\n    padding: '5px',\r\n    borderRadius: '.25rem'\r\n  };\r\n\r\n  constructor(private usernameService: UsernameService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.welcomeForm = new FormGroup({\r\n      'username': new FormControl(null, [Validators.required])\r\n    })\r\n  }\r\n\r\n  //Submit username to UsernameService\r\n  onSubmit(){\r\n    this.usernameService.setUsername(this.welcomeForm.value.username, true);\r\n    this.router.navigate(['form']);\r\n  }\r\n\r\n}\r\n","<div class=\"row\" [ngStyle]=\"newBackground\">\r\n    <div class=\"col d-flex justify-content-center\">\r\n        <div id=\"welcomePage\">\r\n            <h1>Welcome to your Todo App</h1>\r\n            <form [formGroup]=\"welcomeForm\" [ngStyle]=\"formStyle\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"userName\">Username</label>\r\n                    <input type=\"text\" id=\"userName\" class=\"form-control\"formControlName=\"username\">\r\n\r\n                    <div *ngIf=\"!welcomeForm.valid && welcomeForm.touched\" class=\"alert alert-danger mt-2\" role=\"alert\">Please enter a username!</div>\r\n                    \r\n                    <button type=\"submit\" class=\"btn btn-primary mt-2\" [disabled]=\"!welcomeForm.valid\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}